@model Storage5.Models.OrderCreationViewModel


@{
    ViewBag.Title = "Order";
    Layout = null;
}

<h2>Create new order</h2>


<head>
    <meta name="viewport" content="width=device-width" />
    <title>Orders</title>

    <style>
        table, td {
            border: 1px solid black;
            text-align: left;
        }

        table {
            width: 100%;
        }

        tr:nth-child(even) {
            background-color: rgba(17, 34, 17, 0.68);
        }

        tr:hover {
            background-color: #066df8;
        }
    </style>
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken() <!-- security feature to help protect the app gainst cross-site request forgery -->

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" }) <!-- display model level errors -->
    <div class="form-group">
        @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" }) <!-- create label -->
        <text>* mandatory field</text>
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreationDate) <!-- input element -->
            @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })<!-- displays a message if an error exists for the specified field -->
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EstimatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <text>* mandatory field</text>
        <div class="col-md-10">
            @Html.EditorFor(model => model.EstimatedDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EstimatedDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
        <text>* mandatory field</text>
        <div class="col-md-10">
            @Html.EditorFor(model => model.StatusId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        @Html.DropDownListFor(model => model.CustomerId, (ViewBag.CustomersList as List<SelectListItem>))
    </div>
    <div class="form-group">
        <table>
            The Products
            <tr>
                <td><p>Id</p></td>
                <td><p>Name</p></td>
                <td><p>Price</p></td>
                <td><p>Description</p></td>
                <td><p>CreationDate</p></td>
                <td><p>ExpiredDate</p></td>
                <td></td>
            </tr>
            @for(int i=0 ; i < Model.Products.Count ; i++)
            {
                <tr>
                    <td><p>@Html.HiddenFor(m => Model.Products[i].Id) @Model.Products[i].Id</p></td>
                    <td><p>@Html.HiddenFor(m => Model.Products[i].Name) @Model.Products[i].Name</p></td>
                    <td><p>@Html.HiddenFor(m => Model.Products[i].Price) @Model.Products[i].Price</p></td>
                    <td><p>@Html.HiddenFor(m => Model.Products[i].Description) @Model.Products[i].Description</p></td>
                    <td><p>@Html.HiddenFor(m => Model.Products[i].CreationDate) @Model.Products[i].CreationDate</p></td>
                    <td><p>@Html.HiddenFor(m => Model.Products[i].ExpiredDate) @Model.Products[i].ExpiredDate</p></td>
                    <td>
                        @Html.CheckBoxFor(c => Model.Products[i].IsOrdered)
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
<br>
<br>
<br>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
